on_actions = {
	on_startup = {
		effect = {
			every_country = {
				set_variable = { THIS.infamy = 0 }
			}
		}
	}

	# FROM is war target.
	# ROOT is for the country who is declaring war 
	on_declare_war = {
		effect = {
			FROM = {
				set_variable = {
					FROM.states = num_owned_controlled_states
				}
				set_variable = {
					FROM.men = manpower_k 
				}
			}
			ROOT = {
				set_variable = {
					ROOT.states = num_owned_controlled_states
				}
				set_variable = {
					ROOT.men = manpower_k 
				}
			}    
			
			# Base infamy for declaration
			set_variable = { infamy_to_add = 5 }
			
			if = {
				limit = {
					check_variable = { var = ROOT.men value = FROM.men compare = greater_than }
					check_variable = { var = ROOT.states value = FROM.states compare = greater_than }
				}
			
				# Max additional infamy
				set_variable = { extra_infamy = 5 }
		
				set_variable = { FROM.d_men = FROM.men }
				set_variable = { FROM.d_states = FROM.states }

				divide_variable = { FROM.d_men = ROOT.men }
				divide_variable = { FROM.d_states = ROOT.states }
				set_variable = { percentage_men = 1 }
				set_variable = { percentage_states = 1 }
				subtract_from_variable = { percentage_men = FROM.d_men }
				subtract_from_variable = { percentage_states = FROM.d_states }
				multiply_variable = { percentage_men = percentage_states }
				multiply_variable = { extra_infamy = percentage_men }
				add_to_variable = { infamy_to_add = extra_infamy }
			
				# Check if attacker has full core on defending country
				set_variable = { ROOT.cored_states = 0 }
				every_state = {
					limit = {
						is_owned_by = FROM
						is_core_of = ROOT
					}
					add_to_variable = { ROOT.cored_states = 1 }
				}
			
				if = {
					limit = {
						check_variable = { var = ROOT.cored_states value = 0 compare = greater_than }
					}
					divide_variable = { ROOT.cored_states = FROM.states }
					clamp_variable = {
						var = ROOT.cored_states
						min = 0
					}
					set_variable = { percentage_core_states = 1 }
					subtract_from_variable = { percentage_core_states = ROOT.cored_states }
					multiply_variable = { infamy_to_add = percentage_core_states }
				}
			}
			round_variable = infamy_to_add
			add_to_variable = { THIS.infamy = infamy_to_add }
			clamp_variable = {
				var = THIS.infamy
				min = 0
			}
		}
	}

	on_puppet = {
		effect = {
			FROM = {
				set_variable = {
					FROM.states = num_owned_controlled_states
				}
				set_variable = {
					FROM.men = manpower_k 
				}
			}
			ROOT = {
				set_variable = {
					ROOT.states = num_owned_controlled_states
				}
				set_variable = {
					ROOT.men = manpower_k 
				}
			}    
			
			# Base infamy for declaration
			set_variable = { infamy_to_add = 2.5 }
			
			if = {
				limit = {
					check_variable = { var = ROOT.men value = FROM.men compare = less_than_or_equals }
					check_variable = { var = ROOT.states value = FROM.states compare = less_than_or_equals }
				}
			
				# Max additional infamy
				set_variable = { extra_infamy = 5 }
			
				set_variable = { FROM.d_men = FROM.men }
				set_variable = { FROM.d_states = FROM.states }
			
				divide_variable = { FROM.d_men = ROOT.men }
				divide_variable = { FROM.d_states = ROOT.states }
				set_variable = { percentage_men = 1 }
				set_variable = { percentage_states = 1 }
				subtract_from_variable = { percentage_men = FROM.d_men }
				subtract_from_variable = { percentage_states = FROM.d_states }
				multiply_variable = { percentage_men = percentage_states }
				multiply_variable = { extra_infamy = percentage_men }
				add_to_variable = { infamy_to_add = extra_infamy }
			
				# Check if attacker has full core on defending country
				set_variable = { ROOT.cored_states = 0 }
				every_state = {
					limit = {
						is_owned_by = FROM
						is_core_of = ROOT
					}
					add_to_variable = { ROOT.cored_states = 1 }
				}
			
				if = {
					limit = {
						check_variable = { var = ROOT.cored_states value = 0 compare = greater_than }
					}
					divide_variable = { ROOT.cored_states = FROM.states }
					clamp_variable = {
						var = ROOT.cored_states
						min = 0
					}
					set_variable = { percentage_core_states = 1 }
					subtract_from_variable = { percentage_core_states = ROOT.cored_states }
					multiply_variable = { infamy_to_add = percentage_core_states }
				}
			}
			round_variable = infamy_to_add
			add_to_variable = { THIS.infamy = infamy_to_add }	
			clamp_variable = {
				var = THIS.infamy
				min = 0
			}
		}
	}
	
	on_liberate = {
		effect = {
			FROM = {
				set_variable = {
					FROM.states = num_owned_controlled_states
				}
				set_variable = {
					FROM.men = manpower_k 
				}
			}
			ROOT = {
				set_variable = {
					ROOT.states = num_owned_controlled_states
				}
				set_variable = {
					ROOT.men = manpower_k 
				}
			}
			
			# Base infamy reduction for liberation
			set_variable = { infamy_to_subtract = 5 }
			
			if = {
				limit = {
					check_variable = { var = FROM.men value = ROOT.men compare = greater_than }
					check_variable = { var = FROM.states value = ROOT.states compare = greater_than }
				}
			
				# If FROM is bigger, calculate additional infamy reduction
				set_variable = { extra_infamy = 5 }
			
				# Calculate ratios
				set_variable = { FROM.d_men = FROM.men }
				set_variable = { FROM.d_states = FROM.states }
				divide_variable = { FROM.d_men = ROOT.men }
				divide_variable = { FROM.d_states = ROOT.states }
			
				# Calculate normalized ratios
				set_variable = { percentage_men = 1 }
				set_variable = { percentage_states = 1 }
				subtract_from_variable = { percentage_men = FROM.d_men }
				subtract_from_variable = { percentage_states = FROM.d_states }
				multiply_variable = { percentage_men = percentage_states }
				multiply_variable = { extra_infamy = percentage_men }
			
				# Add extra infamy reduction to base infamy reduction
				add_to_variable = { infamy_to_subtract = extra_infamy }
			}
			
			# Clamp the infamy reduction to be a minimum of 0
			clamp_variable = {
				var = infamy_to_subtract
				min = 0
			}
			
			# Apply the final infamy reduction
			round_variable = infamy_to_subtract
			subtract_from_variable = { THIS.infamy = infamy_to_subtract }
			clamp_variable = {
				var = THIS.infamy
				min = 0
			}
		}
	}

	on_release_as_free = {
		effect = {
			FROM = {
				set_variable = {
					FROM.states = num_owned_controlled_states
				}
				set_variable = {
					FROM.men = manpower_k 
				}
			}
			ROOT = {
				set_variable = {
					ROOT.states = num_owned_controlled_states
				}
				set_variable = {
					ROOT.men = manpower_k 
				}
			}
			
			# Base infamy reduction for release
			set_variable = { infamy_to_subtract = 5 }
			
			if = {
				limit = {
					check_variable = { var = FROM.men value = ROOT.men compare = greater_than }
					check_variable = { var = FROM.states value = ROOT.states compare = greater_than }
				}
			
				# If FROM is bigger, calculate additional infamy reduction
				set_variable = { extra_infamy = 5 }
			
				# Calculate ratios
				set_variable = { FROM.d_men = FROM.men }
				set_variable = { FROM.d_states = FROM.states }
				divide_variable = { FROM.d_men = ROOT.men }
				divide_variable = { FROM.d_states = ROOT.states }
			
				# Calculate normalized ratios
				set_variable = { percentage_men = 1 }
				set_variable = { percentage_states = 1 }
				subtract_from_variable = { percentage_men = FROM.d_men }
				subtract_from_variable = { percentage_states = FROM.d_states }
				multiply_variable = { percentage_men = percentage_states }
				multiply_variable = { extra_infamy = percentage_men }
			
				# Add extra infamy reduction to base infamy reduction
				add_to_variable = { infamy_to_subtract = extra_infamy }
			}
			
			# Clamp the infamy reduction to be a minimum of 0
			clamp_variable = {
				var = infamy_to_subtract
				min = 0
			}
			
			# Apply the final infamy reduction
			round_variable = infamy_to_subtract
			subtract_from_variable = { THIS.infamy = infamy_to_subtract }
			clamp_variable = {
				var = THIS.infamy
				min = 0
			}
		}
	}

	on_release_as_puppet = {
		effect = {
			# Base infamy reduction for release
			set_variable = { infamy_to_subtract = 2.5 }

			subtract_from_variable = { THIS.infamy = infamy_to_subtract }
			clamp_variable = {
				var = THIS.infamy
				min = 0
			}
		}
	}

	on_justifying_wargoal_pulse = {
		effect = {
			ROOT = {
				add_to_variable = { THIS.infamy = 0.1 }
				clamp_variable = {
					var = THIS.infamy
					min = 0
				}
			}
		}
	}

	# cheating is bad!
	on_nuke_drop = {
		effect = {
			ROOT = {
				add_to_variable = { THIS.infamy = 1000 }
				clamp_variable = {
					var = THIS.infamy
					min = 0
				}
			}
		}
	}

	on_guarantee = {
		effect = {
			# Base infamy reduction for guarantee
			set_variable = { infamy_to_subtract = 2.5 }

			subtract_from_variable = { THIS.infamy = infamy_to_subtract }
			clamp_variable = {
				var = THIS.infamy
				min = 0
			}
		}
	}

	on_daily_TRB = {
		# decrease infamy
		effect = {
			#every_country = {
			#	add_to_variable = { THIS.infamy = 1 }
			#}
		}
	}
}